/**
 * @copyright   2016-2018, Miles Johnson
 * @license     https://opensource.org/licenses/MIT
 */
import React from 'react';
import PropTypes from 'prop-types';
export interface MarkupProps {
    /** String content with HTML to safely render. */
    content?: string | null;
    /** Disable the conversion of new lines to `<br />` elements. */
    disableLineBreaks?: boolean;
    /** Disable the HTML element whitelist. */
    disableWhitelist?: boolean;
    /** Content to render when the `content` prop is empty. */
    emptyContent?: React.ReactNode;
    /** Strip all HTML while rendering. */
    noHtml?: boolean;
    /** Strip all HTML, except HTML generated by matchers, while rendering. */
    noHtmlExceptMatchers?: boolean;
    /** @ignore Pre-parsed content to render. */
    parsedContent?: React.ReactNode;
    /** HTML element or React fragment to wrap content with. */
    tagName?: string;
}
export default class Markup extends React.PureComponent<MarkupProps> {
    static propTypes: {
        content: PropTypes.Requireable<any>;
        disableLineBreaks: PropTypes.Requireable<any>;
        disableWhitelist: PropTypes.Requireable<any>;
        emptyContent: PropTypes.Requireable<any>;
        noHtml: PropTypes.Requireable<any>;
        noHtmlExceptMatchers: PropTypes.Requireable<any>;
        parsedContent: PropTypes.Requireable<any>;
        tagName: PropTypes.Requireable<any>;
    };
    static defaultProps: {
        content: string;
        disableLineBreaks: boolean;
        disableWhitelist: boolean;
        emptyContent: null;
        noHtml: boolean;
        noHtmlExceptMatchers: boolean;
        parsedContent: null;
        tagName: string;
    };
    getContent(): React.ReactNode;
    render(): JSX.Element;
}
