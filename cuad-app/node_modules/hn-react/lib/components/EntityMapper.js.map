{"version":3,"sources":["hn-react/src/components/EntityMapper.js"],"names":["__awaiter","thisArg","_arguments","P","generator","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","EntityMapper","props","state","entityProps","mapper","getMapperFromProps","ready","uuid","asyncMapper","context","hnContext","entities","find","componentState","loadComponent","push","setState","nextProps","entityComponent","entityComponents","c","assureComponent","newState","entity","getData","EntityComponent","component","createElement","bundle","getBundle","paragraph","default","contextTypes","object","__hn","type","propTypes","oneOfType","bool","shape","func","string","isRequired","defaultProps"],"mappings":"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","file":"EntityMapper.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport getNested from 'get-nested';\nimport site from '../utils/site';\n\nclass EntityMapper extends Component {\n  static entityComponents = [];\n\n  static contextTypes = {\n    hnContext: PropTypes.object,\n  };\n\n  /**\n   * This makes sure the data for this url is ready to be rendered.\n   * @param uuid\n   * @param mapper\n   * @param asyncMapper\n   * @returns void\n   */\n  static async assureComponent({ uuid, mapper, asyncMapper }) {\n    // This gets the entity from the site, based on the uuid.\n    const entity = site.getData(uuid);\n\n    // This should give back a bundle string, that is used in the mapper.\n    const bundle = EntityMapper.getBundle(entity);\n\n    // Get the component that belongs to this entity type\n    let entityComponent =\n      typeof mapper === 'function' ? mapper(entity, bundle) : mapper[bundle];\n\n    // If asyncMapper is true, execute the function so it returns a promise.\n    if (asyncMapper && typeof entityComponent === 'function') {\n      entityComponent = entityComponent();\n    }\n\n    // If a promise was returned, resolve it.\n    if (entityComponent && typeof entityComponent.then !== 'undefined') {\n      entityComponent = await entityComponent;\n    }\n\n    // Make sure there is an entityComponent.\n    if (!entityComponent) {\n      return;\n    }\n\n    // If it has a .default (ES6+), use that.\n    if (entityComponent.default) {\n      entityComponent = entityComponent.default;\n    }\n\n    // Store the entityComponent globally, so it can be rendered sync.\n    EntityMapper.entityComponents.push({\n      component: entityComponent,\n      mapper,\n      uuid,\n    });\n  }\n\n  static getBundle = entity =>\n    getNested(\n      () => `${entity.__hn.entity.type}__${entity.__hn.entity.bundle}`,\n      '_fallback',\n    );\n\n  /**\n   * Use this method to get a final mapper, based on both the asyncMapper & mapper prop.\n   * This ensures backwards compatibility.\n   * @param asyncMapper\n   * @param mapper\n   * @returns {*} mapper\n   */\n  static getMapperFromProps = ({ asyncMapper, mapper }) =>\n    typeof asyncMapper === 'boolean' ? mapper : asyncMapper;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      entityProps: props.entityProps,\n      mapper: EntityMapper.getMapperFromProps(props),\n      ready: false,\n      uuid: props.uuid,\n    };\n  }\n\n  /**\n   * If this component exists in a tree that is invoked with the waitForHnData function, this function is invoked.\n   * Only after the promise is resolved, the component will be mounted. To keep the data fetched here, we assign the\n   * state to the hnContext provided by the DrupalPageContextProvider. This way, the state will be preserved trough\n   * multiple renders.\n   */\n  async asyncBootstrap() {\n    const { asyncMapper } = this.props;\n    const { uuid, entityProps, mapper } = this.state;\n\n    // If this mapper + uuid combination is already in state, use that state\n    const state = getNested(\n      () =>\n        this.context.hnContext.state.entities.find(\n          e => e.mapper === mapper && e.uuid === uuid,\n        ).componentState,\n    );\n\n    if (state) {\n      return true;\n    }\n\n    this.context.hnContext.state.entities.push({\n      componentState: await this.loadComponent({\n        asyncMapper,\n        entityProps,\n        mapper,\n        uuid,\n      }),\n      mapper,\n      uuid,\n    });\n    return true;\n  }\n\n  /**\n   * The first time this element is rendered, we always make sure the component and the Drupal page is loaded.\n   */\n  componentWillMount() {\n    const { uuid } = this.props;\n    const { mapper } = this.state;\n    const state = getNested(\n      () =>\n        this.context.hnContext.state.entities.find(\n          e => e.mapper === mapper && e.uuid === uuid,\n        ).componentState,\n    );\n\n    if (state) {\n      this.setState(state);\n    } else {\n      this.loadComponent({\n        ...this.props,\n        mapper: EntityMapper.getMapperFromProps(this.props),\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      this.props.uuid !== nextProps.uuid ||\n      this.props.mapper !== nextProps.mapper ||\n      this.props.asyncMapper !== nextProps.asyncMapper\n    ) {\n      this.loadComponent({\n        ...nextProps,\n        mapper: EntityMapper.getMapperFromProps(nextProps),\n      });\n    }\n  }\n\n  async loadComponent({ uuid, mapper, asyncMapper, entityProps }) {\n    // Check if component for combination of mapper + uuid already was loaded\n    const entityComponent = EntityMapper.entityComponents.find(\n      c => c.mapper === mapper && c.uuid === uuid,\n    );\n\n    // If component isn't loaded yet, go load it\n    if (!entityComponent) {\n      this.setState({ ready: false });\n\n      await EntityMapper.assureComponent({\n        asyncMapper,\n        mapper,\n        uuid,\n      });\n    }\n\n    const newState = {\n      ...this.state,\n      entityProps,\n      mapper,\n      ready: true,\n      uuid,\n    };\n\n    this.setState(newState);\n\n    return newState;\n  }\n\n  isReady() {\n    return this.state.ready;\n  }\n\n  render() {\n    const { uuid, entityProps, mapper } = this.state;\n\n    const entity = site.getData(uuid);\n\n    if (!entity) {\n      return null;\n    }\n\n    const EntityComponent = getNested(\n      () =>\n        EntityMapper.entityComponents.find(\n          c => c.uuid === uuid && c.mapper === mapper,\n        ).component,\n    );\n\n    if (!EntityComponent) {\n      return null;\n    }\n\n    return (\n      <EntityComponent\n        bundle={EntityMapper.getBundle(entity)}\n        paragraph={entity}\n        entity={entity}\n        {...entityProps}\n      />\n    );\n  }\n}\n\nEntityMapper.propTypes = {\n  asyncMapper: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOfType([PropTypes.shape(), PropTypes.func]),\n  ]),\n  entityProps: PropTypes.shape(),\n  mapper: PropTypes.oneOfType([\n    PropTypes.shape(),\n    PropTypes.func,\n    PropTypes.bool,\n  ]),\n  uuid: PropTypes.string.isRequired,\n};\n\nEntityMapper.defaultProps = {\n  asyncMapper: false,\n  entityProps: {},\n  mapper: false,\n};\n\nexport default EntityMapper;\n"],"sourceRoot":"../../.."}